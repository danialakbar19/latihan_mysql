# Soal No. 1, buat database lalu diseleksi
CREATE DATABASE myshop;
SHOW DATABASES;
USE myshop;

# Soal No. 2, buat table users, categories, dan items
CREATE TABLE users
(
    id int AUTO_INCREMENT,
    nama varchar(255),
    email varchar(255),
    password varchar(255),
    PRIMARY KEY (id)
);

CREATE TABLE categories
(
    id int AUTO_INCREMENT,
    name varchar(255),
    PRIMARY KEY (id)
);

CREATE TABLE items
(
    id int AUTO_INCREMENT,
    nama varchar(255),
    description varchar(255),
    price int,
    stock int,
    category_id int,
    PRIMARY KEY (id),
    FOREIGN KEY (category_id) REFERENCES categories(id)
);

# Soal No. 3, memasukkan data ke dalam table yang sudah dibuat tadi
INSERT INTO users VALUES (null, "daniel", "danial39@gmail.com", "daniel123"), (null, "Jane Doe", "jane@doe.com", "jenita123");
INSERT INTO categories VALUES (null, "gadget"), (null, "cloth"), (null, "men"), (null, "women"), (null, "branded");
INSERT INTO items VALUES (null, "Sumsang B50", "Hape keren dari merk Sumsang", 4000000, 100, 1), (null, "Uniklooh", "Baju keren dari brand ternama", 500000, 50, 2), (null, "IMHO Watch", "Jam tangan anak yang jujur banget", 2000000, 10, 1);

# Soal No. 4, mengambil data dari database
# a. Mengambil data users
SELECT id, nama, email FROM users;

# b. Mengambil data items
# query items dengan harga diatas 1 juta
SELECT * FROM items WHERE price > 1000000;
# query items dengan nama yang menyerupai "uniklo"
SELECT * FROM items WHERE nama LIKE "uniklo%";

# c. Menampilkan data join
SELECT items.nama, items.description, items.price, items.stock, items.category_id, categories.name FROM items INNER JOIN categories ON items.category_id = categories.id;

# Soal No. 5, update price Sumsang B50 jadi 2500000
UPDATE items SET price = 2500000 WHERE id = 1;
